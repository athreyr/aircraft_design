%%  Plot the charts created from Indian Reference Atmosphere lookup table
% 
%   plotIraCharts loads the lookup table for the reference atmosphere from
%   file, and creates 4 figures:
%   1. h, hG vs. T
%   2. h, best fit lines vs. T
%   3. h vs. P
%   4. h vs. rho
%   which can then be saved to file.
% 
%   The figures generated by plotIraCharts are included in this package.
%   Open the FIG-file to edit the charts according to your requirements.
% 
%   If you do need to run plotIraCharts, you can directly do so after
%   uncommenting the first line, since a MAT-file containing the Indian
%   Reference Atmosphere structure is included in the package. However, if
%   you are using a different MAT-file, the names of the variable(s) might
%   be different, so the code will have to be re-written (Find and Replace
%   might help).
% 
%   Sections can be skipped from execution by adding a left brace { after
%   the % sign in the first line of each section. This is useful for
%   generating only particular figures.
% 
%   To save the figures generated by plotIraCharts, uncomment the last
%   section.
% 
%   Alternate functions have been included wherever possible to make sure
%   that plotIraCharts works on any release from R2007a and above. (The
%   verLessThan function requires R2007a.)

%   Copyright 2021 Athrey Ranjith Krishnanunni

%% Load table into memory and pre-process graphic objects
%
% load('IndianReferenceAtmosphere_Sasi1994.mat','IRA')

nFigs = 4;
maxNPlots = IRA.nRegions + 1; % max number of plots in any of the figures

figNameArray = cell(1,nFigs); % name with which the figures will be saved

if verLessThan('matlab','8.1')
    if exist('figHandleArray','var'), clear figHandleArray, end
    if exist('plotHandleArray','var'), clear plotHandleArray, end
else
    figHandleArray = gobjects(1,nFigs); % requires R2013a (8.1) and above
    plotHandleArray = gobjects(maxNPlots,nFigs);
end
%}
%% 1. Geometric and geopotential altitude vs. temperature
%
hGh_T = 1; % figure number for hG, h vs. T
figNameArray{hGh_T} = 'hG,h vs T';
figHandleArray(hGh_T) = figure('Visible','off');

if verLessThan('matlab','9.0')
    
    [axesHandleArray, plotHandleArray(1,hGh_T), plotHandleArray(2,hGh_T)]...
               = plotyy(IRA.T_K, IRA.h_m/1000, IRA.T_K, IRA.hG_km); %#ok<PLOTYY>
    ylabel(axesHandleArray(1), 'Geopotential Altitude h (km)')
    ylabel(axesHandleArray(2), 'Geometric Altitude h_G (km)')

else
    yyaxis left % requires R2016a (9.0) and above
    plotHandleArray(1,hGh_T) = plot(IRA.T_K,IRA.h_m/1000);
    ylabel('Geopotential Altitude h (km)')

    yyaxis right
    plotHandleArray(2,hGh_T) = plot(IRA.T_K,IRA.hG_km);
    ylabel('Geometric Altitude h_G (km)')
    
    axesHandleArray = gca;
end

set(plotHandleArray(1,hGh_T),'Marker','o')
set(plotHandleArray(2,hGh_T),'Marker','+')
set(plotHandleArray(1:2,hGh_T),'MarkerSize',10)
set(plotHandleArray(1:2,hGh_T),'LineWidth',1)
set(plotHandleArray(1:2,hGh_T),'LineStyle','None')

set(axesHandleArray,'FontSize',16)

title('Altitude - Temperature Data for Indian Reference Atmosphere')
xlabel('Temperature T (K)')
grid on
set(figHandleArray(hGh_T),'Visible','on')
%}
%% 2. Geopotential altitude vs. temperature - data and best fit lines
%
hDataFit_T = 2; % figure number for h, best fit data vs. T
figNameArray{hDataFit_T} = 'h vs T';
figHandleArray(hDataFit_T) = figure('Visible','off');

% plot recorded data points first, so that fit lines are displayed over it
plotHandleArray(end,hDataFit_T) = plot(IRA.T_K,IRA.h_m/1000,'o',...
                                       'MarkerSize',10,'LineWidth',1);
% the handle to that plot is saved as the last element in the array so as
% to not interfere with the indices in the following loop

hold on

iGradientRegion = 1;
iIsothermalRegion = 1;
for thisRegion = 1 : IRA.nRegions
    
    iThisRegion = (IRA.hGRegionLim_km(thisRegion) <= IRA.hG_km) & ...
                  (IRA.hG_km <= IRA.hGRegionLim_km(thisRegion+1));
    
    if IRA.isGradientRegion(thisRegion)
        
        xTemperature_K = IRA.T_K(iThisRegion);
        
        % convert T = m*h + c into h = (1/m)*T +(-c/m)
        slopeT_h = IRA.coeffBestFitLine(1,iGradientRegion);
        interceptT_h = IRA.coeffBestFitLine(2,iGradientRegion);
        coeffLineh_T = [1/slopeT_h, -interceptT_h/slopeT_h];
        
        yHeight_m = polyval(coeffLineh_T,xTemperature_K,1);
        
        iGradientRegion = iGradientRegion + 1;
    
    else
        yHeight_m = IRA.h_m(iThisRegion);
        nPointsThisRegion = numel(yHeight_m);
        xTemperature_K = IRA.temperatureVal_K(iIsothermalRegion) * ...
                         ones(nPointsThisRegion,1);
        iIsothermalRegion = iIsothermalRegion + 1;
    end
               
    plotHandleArray(thisRegion,hDataFit_T) = ...
                     plot(xTemperature_K,yHeight_m/1000,'r','LineWidth',2);
end

legend(plotHandleArray([end 1],hDataFit_T),...
       {'Recorded data','Best fit lines'},'Location','northeast')

title('Indian Reference Atmosphere - Temperature chart')
xlabel('Temperature T (K)')
ylabel('Geopotential Altitude h (km)')
grid on
set(gca,'FontSize',16)
set(figHandleArray(hDataFit_T),'Visible','on')
%}
%% 3. Geopotential altitude vs. pressure
%
h_p = 3; % figure number for h vs. P
figNameArray{h_p} = 'h vs p';
figHandleArray(h_p) = figure('Visible','off');
plotHandleArray(1,h_p) = semilogx(IRA.p_Pa/1000,IRA.h_m/1000,'LineWidth',2);
title('Indian Reference Atmosphere - Pressure chart')
xlabel('Pressure p (kPa)')
ylabel('Geopotential Altitude h (km)')
grid on
set(gca,'FontSize',16)
set(figHandleArray(h_p),'Visible','on')
%}
%% 4. Geopotential altitude vs. density
%
h_rho = 4; % figure number for h vs. rho
figNameArray{h_rho} = 'h vs rho';
figHandleArray(h_rho) = figure;
plotHandleArray(1,h_rho) = semilogx(IRA.rho_kgpm3,IRA.h_m/1000,'LineWidth',2);
title('Indian Reference Atmosphere - Density chart')
xlabel('Density \rho (kg/m^3)')
ylabel('Geopotential Altitude h (km)')
grid on
set(gca,'FontSize',16)
set(figHandleArray(h_rho),'Visible','on')
%}
%% Save figures
% remove the { in the line below to the save the figures to file
%{
if verLessThan('matlab','8.2')
    hgsave(figHandleArray,'IraCharts')
else
    savefig(figHandleArray,'IraCharts') % requires R2013b (8.2) and above
end

for iFig = 1 : nFigs
    saveas(figHandleArray(iFig),figNameArray{iFig},'png')
end
%}
